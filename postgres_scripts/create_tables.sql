DROP TABLE IF EXISTS imd;

CREATE TABLE imd (
	year SMALLINT,
	outer_code CHAR(4),
	category CHAR(16),
	value DOUBLE PRECISION
);


DROP TABLE IF EXISTS pop_density;

CREATE TABLE pop_density (
	year SMALLINT,
	outer_code CHAR(4),
	pop INTEGER, 
	area DOUBLE PRECISION,
	density DOUBLE PRECISION
);


DROP TABLE IF EXISTS mortality;
-- see the csv file for what each of these are
CREATE TABLE mortality (
	outer_code CHAR(4),
	year SMALLINT,
	all_causes INTEGER,
	LC01 INTEGER, LC02 INTEGER, LC03 INTEGER, LC04 INTEGER, LC05 INTEGER,
	LC06 INTEGER, LC07 INTEGER, LC08 INTEGER, LC09 INTEGER, LC10 INTEGER,
	LC11 INTEGER, LC12 INTEGER, LC13 INTEGER, LC14 INTEGER, LC15 INTEGER,
	LC16 INTEGER, LC17 INTEGER, LC18 INTEGER, LC19 INTEGER, LC20 INTEGER,
	LC21 INTEGER, LC22 INTEGER, LC23 INTEGER, LC24 INTEGER, LC25 INTEGER,
	LC26 INTEGER, LC27 INTEGER, LC28 INTEGER, LC29 INTEGER, LC30 INTEGER,
	LC31 INTEGER, LC32 INTEGER, LC33 INTEGER, LC34 INTEGER, LC35 INTEGER,
	LC36 INTEGER, LC37 INTEGER, LC38 INTEGER, LC39 INTEGER, LC40 INTEGER,
	LC41 INTEGER, LC42 INTEGER, LC43 INTEGER, LC44 INTEGER, LC45 INTEGER,
	LC46 INTEGER
);


DROP TABLE IF EXISTS population;
CREATE TABLE population (
	age0to15 INTEGER,
	age16to29 INTEGER,
	age30to44 INTEGER,
	age45to64 INTEGER,
	age65up INTEGER,
	outer_code CHAR(4),
	total INTEGER,
	year SMALLINT
);



DROP TABLE IF EXISTS prescribe;
CREATE TABLE prescribe (
	outer_code CHAR(4),
	bnf_code VARCHAR,
	bnf_sec SMALLINT,
	bnf_sub_sec SMALLINT,
	year SMALLINT,
	month SMALLINT,
	quantity INTEGER,
	items INTEGER,
	net_ingredient_cost DOUBLE PRECISION,
	act_cost DOUBLE PRECISION
);

